import "~/styles/globals.css"

import type { Metadata } from "next"
import { Geist } from "next/font/google"

import { headers } from "next/headers"
import Link from "next/link"
import { cookieToInitialState } from "wagmi"
import AuthProvider from "~/components/auth/auth-provider"
import { wagmiConfig } from "~/components/auth/config"
import WalletButton from "~/components/auth/wallet-button"
import LogoAiRanker from "~/components/icons/logo-ai-ranker"
import LogoAiRankerFull from "~/components/icons/logo-ai-ranker-full"
import Nav from "~/components/nav"
import { auth } from "~/server/auth"
import { TRPCReactProvider } from "~/trpc/react"

export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }]
}

const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans"
})

export default async function RootLayout({ children }: Readonly<{ children: React.ReactNode }>) {
  const session = await auth()
  const wagmiState = cookieToInitialState(wagmiConfig, (await headers()).get("cookie"))

  return (
    <html lang="en" className={`${geist.variable}`}>
      <body className={"bg relative flex h-screen w-full flex-col"}>
        <AuthProvider session={session} wagmiState={wagmiState}>
          <TRPCReactProvider>
            <header className="bg-background fixed top-0 z-30 mx-auto flex h-20 w-full items-center justify-between shadow-lg px-4 xl:px-0">
              <div className="mx-auto flex w-full max-w-7xl items-center justify-between pr-0">
                <Link className={"flex flex-row items-center gap-2"} href="/">
                  <LogoAiRankerFull className="size-12 text-primary" />
                </Link>
                <div>
                  <Nav />
                </div>
                <div className="hidden items-center gap-4 md:flex">
                  <WalletButton />
                </div>
              </div>
            </header>
            <div className={"mt-20 h-full mx-auto w-full max-w-7xl px-4 xl:px-0"}>{children}</div>
          </TRPCReactProvider>
        </AuthProvider>
      </body>
    </html>
  )
}
